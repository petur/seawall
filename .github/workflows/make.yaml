name: make

on: push

jobs:
  make:
    strategy:
      matrix:
        platform:
        - runner: ubuntu-latest
          shell: 'bash'
          suffix: -linux-gcc-nehalem
          cxx: g++
          llvm_profdata: ''
          arch: nehalem
        - runner: ubuntu-latest
          shell: 'bash'
          suffix: -linux-gcc
          cxx: g++
          llvm_profdata: ''
          arch: haswell
        - runner: ubuntu-22.04
          shell: 'bash'
          suffix: -linux-clang
          cxx: clang++-14
          llvm_profdata: llvm-profdata-14
          arch: haswell
        - runner: windows-latest
          shell: 'msys2 {0}'
          suffix: -windows-clang
          cxx: clang++
          llvm_profdata: llvm-profdata
          arch: haswell
    defaults:
      run:
        shell: ${{ matrix.platform.shell }}
    runs-on: ${{ matrix.platform.runner }}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        msystem: clang64
        install: >-
          git
          base-devel
          mingw-w64-clang-x86_64-clang
          mingw-w64-clang-x86_64-compiler-rt
          mingw-w64-clang-x86_64-lld
      if: ${{ matrix.platform.runner == 'windows-latest' }}
    - uses: actions/checkout@v3
    - id: make
      run: |
        make CXX=${{ matrix.platform.cxx }} LLVM_PROFDATA=${{ matrix.platform.llvm_profdata }} \
          ARCH=${{ matrix.platform.arch }} LDFLAGS='-static -s' SUFFIX=${{ matrix.platform.suffix }}
        echo "::set-output name=artifact::$(basename -s .exe out/seawall-*)"
    - uses: actions/upload-artifact@v3
      with:
        name: ${{ steps.make.outputs.artifact }}
        path: out/seawall-*
